# create a list of all installed packages
ip <- as.data.frame(installed.packages())
head(ip)
# if you use MRO, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("MRO", ip$LibPath))
# we don't want to remove base or recommended packages either\
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
# remove the packages
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
setwd("C:/Users/tamar/Documents/GitHub/rFASTCORMICS/FASTCORMICS for microarray data/Data/CEL example files (from GSE49910)")
library("hugene.1.0.st.v1frmavecs")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("hugene.1.0.st.v1frmavecs")
install.packages("BiocManager")
install.packages("BiocManager")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("hugene.1.0.st.v1frmavecs")
BiocManager::install("hgu133afrmavecs")
## for hugene.1.0.st.v1
library("hugene.1.0.st.v1frmavecs")
data("hugene.1.0.st.v1frmavecs")
data("hugene.1.0.st.v1barcodevecs")
BiocManager::install("hugene.1.0.st.v1frmavecs")
BiocManager::install("hgu133afrmavecs")
BiocManager::install("hgu133plus2frmavecs")
BiocManager::install("hgu133a2frmavecs")
## for hugene.1.0.st.v1
library("hugene.1.0.st.v1frmavecs")
data("hugene.1.0.st.v1frmavecs")
data("hugene.1.0.st.v1barcodevecs")
## for hgu133a
library("hgu133afrmavecs")
data("hgu133afrmavecs")
data("hgu133abarcodevecs")
## for hgu133plus2
library("hgu133plus2frmavecs")
data("hgu133plus2frmavecs")
data("hgu133plus2barcodevecs")
## for hgu133a2
library("hgu133a2frmavecs")
data("hgu133a2frmavecs")
data("hgu133a2barcodevecs")
library("oligo")
BiocManager::install("oligo")
library("oligo")
celFiles = list.celfiles() #in current folder
rawFiles = read.celfiles(celFiles)
BiocManager::install("frma")
library("frma")
rawFiles.eset <- frma(rawFiles, summarize="median_polish", target="core", input.vecs=hgu133plus2frmavecs)
eset=frma(rawFiles,input.vecs=hugene.1.0.st.v1frmavecs, summarize="median_polish", target="core" )
read.affy
simpleaffy
BiocManager::install("simpleaffy")
celFiles = list.celfiles() #in current folder
rawFiles = read.affy(celFiles)
library("simpleaffy")
celFiles = list.celfiles() #in current folder
rawFiles = read.affy(celFiles)
rawFiles = read.affy()
BiocManager::install("affy")
library("affy")
celFiles = list.celfiles() #in current folder
rawFiles = read.affy()
rawFiles = read.affy(celFiles)
rawFiles = read.affybatch(celFiles)
rawFiles.eset <- frma(rawFiles, summarize="median_polish", target="core", input.vecs=hgu133plus2frmavecs)
rawFiles.barcode <- barcode(exprs(rawFiles.eset), platform=NULL, mu=hgu133plus2barcodevecs$mu,
tau=hgu133plus2barcodevecs$tau, output="z-score")
write.table(rawFiles.barcode, "barcode.txt", quote=F, col.names=F, row.names=F)
write.table(colnames(rawFiles.barcode),"colnames.txt", quote=F, col.names=F, row.names=F)
write.table(rownames(rawFiles.barcode),"rownames.txt", quote=F, col.names=F, row.names=F)
write.table(exprs(rawFiles.eset), "frma.txt", quote=F, col.names=F, row.names=F)
